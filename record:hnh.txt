record:hnh.txt
후원 금액 목표를 달성하면 제작한 커스텀 클라를 공개하는 방식이 좋겠다. 텀블벅 등
    후원을 해 준 사람에게는 일정 설명이 공짜!
    %손실은 가치를 계산한다. 최대한 constant 기부를 한다. %이익은 챙긴다. constant 이익은 가치를 계산한다

# todo
## 당장
아이템을 집으라고 했는데 예외가 발생한다면, 그 때까지 몇 개의 아이템을 집었는지는 어떻게 전달하지??
error message를 콘솔이 아닌 클라이언트에 출력하도록 하자
buildDryingframe detail
    양털 실과 산양털 실은 지원하지 않습니다(제가 리소스 이름을 모르기 때문입니다)
이게 처리된 문제인지 어떤건지 모르겠다
    build window를 띄워보고 widget tree를 출력해보자
//  test000으로 build를 시키고 창이 뜨는걸 기다렸는데 아래와 같은 에러가 발생했다
//      build window는 window가 아닌것인가?
//  ```
//  [lmi.Util::debugPrint()] { java.lang.reflect.InvocationTargetException }
//  java.lang.reflect.InvocationTargetException
//  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
//  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
//  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
//  	at java.lang.reflect.Method.invoke(Method.java:498)
//  	at lmi.Development$MainRunnable._invokeCommand(Development.java:115)
//  	at lmi.Development$MainRunnable.run(Development.java:79)
//  	at java.lang.Thread.run(Thread.java:750)
//  Caused by: { type: ET_WINDOW_OPEN }
//  	at haven.GameUI.waitWindowAdded(GameUI.java:1777)
//  	at lmi.Api.prepareBuild(Api.java:278)
//  	at lmi.Development.test000(Development.java:539)
//  	... 7 more
//  ```
pathfinder 보완할 부분
    로드되지 않은 맵을 포함시키고 있는 부분 정밀화
일단 window가 뜨면 그것이 의도한 window라고 생각하고 프로그램을 작성했다
    엉뚱한 window가 작동을 막을 수도 있을 것 같다..
어레이를 주면 그걸 endswith해서 해당하는 배열을 만들어 반환하도록 api에 함수를 작성하자
build dryingframe
    bough, branch, string
    Gob::isContainer()
    Api에 isbox로부터 아이템을 가져오는 함수를 작성중이다
        stockpile을 interact 시, window가 뜨는 것을 기다리는 함수를 우선 작성해야 한다
        iscontainer()가 몇 개 확인 안하는데, 가능한 여러 container를 추가하자
progress가 진행중인지는 가장 정확한 것은 포즈일 것 같다
progress가 진행중인지 위젯의 유무는 부정확할 수 있다
progress를 destroy했는데 아직 작업중이면 1tick이 지나기 전까지는 progress가 없는 상태이기 때문이다
class Automation가 String _version을 가지도록 하고, man이 name, version을 첫 라인으로 출력하도록 하자
pose가 변하는 방식 관찰하기(도중에 idle을 거치는지)
## 배포
한글 키보드 입력 가능
pathfinder에 대한 설명 추가
    어디에?
Jorb <num>
    횟수만큼, 레어도에 따라 다른 문장이 출력
help 만들기
    오브젝트를 클릭하면 각 오브젝트에 대한 설명을 출력한다
건설 자동화 프로그램
    buildDryingFrame을 고려하여 Api::getItemArray()만들기
    아이템을 스톡 파일에서 가져오기, 휠을 굳이 사용할 필요는 없을 것 같다
        메세지 측면에서 휠하고 쉬프트 클릭이 어떻게 다른 것일까?
    드라잉 프레임 간의 세로 간격을 얼마로 정할까?
        말의 크기, 드라잉 프레임의 크기를 조사
    부분 로직
        선택
        처리 wait
        click
        move wait
        window wait
        build
        progress wait
        complete wait
        end
    전체 로직
        get item
        if (building)
            build
        else
            make new build
    isContainer를 만들어서 상자 Gob인지에 대한 boolean 값을 반환하도록 한다
출력문 수정 및 한 곳으로 몰아 넣기
    워딩: 자동화 프로그램
    각 automation마다 개별 버전 표기하기
title에 버전 명시하기
## 일반
pathfind
    갈 수 없는 타일을 block으로 인식하도록 구현
댕댕이
    !이리와, !끌어, !따라와, !저리가, !들어
1~2 픽셀 정도 여유가 있으면 잘 이동하려나?
대화를 걸거나 자세를 취할 때 direction이 바뀌는 것은 어떤 uimsg를 받아서 처리할까?
화면 사이즈가 바뀌면 Util._mapViewCenter 값을 바꿔주도록 하자
    아마 frame에 sizeChanged() 같은 event handler가 있을 것 같다
발생할 것이 반드시 확실한 경우 wait(0)을 하도록 한다
AlignLog
    끝나지 않고 계속 가능한 환경을 대기하는 것이 좋겠다
        적재할 장소가 가득 차면 빌 때까지 대기
WidgetManager는 ObjectShadow로 합치기
수레에 짐을 실으면 들고 있던 짐의 removed는 false로 변할까?
다시 짐을 빼면 넣기 전의 짐과 id가 같을까?
물체와 아이템마다 상호작용하는 모든 방식을 각각 api로 만들기
허슬링이 j로 딱 붙은 뒤 붙은 물체를 -1 만큼 carry할 수 있을까?
haven.LMI를 분해하자
command와 manual이 하나를 사용하고, args[0]에 따라 기능하게 수정할 수 있을 것 같다
    기본 명령어로 help를 만들면 좋을 것 같다
시작 시 System 채팅에 focus 되도록
AlignLog
    정리할 나무를 배열에서 제거하고 있나?
        그럴꺼면 sort하고 뒤에를 하나씩 배면서 제거하는게 좋을 것 같다
        매번 새로 탐색을 했구나?
            // TODO
            // 이거는 너무 비효율적이다
            // dump area에 있는 gob만 탐색하는 방식으로 수정해보자
    범위 내의 곱을 순회하면서 위치와 방향과 바운딩 박스에 따라 내려놓으려는 장소와 겹치는지를 미리 계산할 수 있다
isLog()를 gob에 만들면 어떨까?
Initializer와 ObjectShadow 하나로 합치는 모델 구상하기
delegate에 있지 않는 것들을 넣어주기
GItem과 상호작용
    집기, 놓기, 상태 확인하기(진행도 유무), 상호작용하기(커서의 아이템으로, 플라워 메뉴)
타일의 리소스 출력하기
아이템 넣고 빼기
flower menu에 잡다한 함수 잘 분리해 놓기
UI
반응형
    채팅 명령 감지 작동
드라잉 프레임 건설
땅파기나 파괴 같은 것도 flower menu가 아니지만 hourglass를 사용한다
    HourglassHandler를 만들자
WaitManager
    hourglass, put, act cancel, actClick
    move에 거리에 따른 timeout 적용하기
pbot 조사
    night sight
    get_boundingbox
    get_hourglass
    msg_to_chat
    select_area
    select_gob
    select_item
    sys_msg
    tile_resname_at
    wait_for_hourglass
    wait_for_window_close
    window_name_for_gob
removed
session에서 pose를 바꾸는 입력 살펴보기, gob의 getpose 살펴보기 attr에는 없는 것일까?
반복적으로 들었다 내려놨다를 하면서 가로 세로 사이즈를 구하는 자동화
범위 지정: 작물 수확, 씨뿌리기, 서베이, 돌깔기
범위 지정하는 방식이 있으면 좋긴 하다
물고기가 다 익었는지 확인하는 방법
드라잉 프레임의 상태를 확인하는 방법
일단 receive좀 읽다가 그냥 움직이는거 출력해서 적용해보자
uimsg를 조사하던 중 glut이라는 message를 통해 gauge가 바뀐다는 것을 알게 되었다
    더 구체적으로 haven.CharWnd::update()가 어떻게 진행되는지 읽어보자
glut을 통해ko
캐릭터의 높이를 get3f()인가로 얻을 수 있는데, 이 때 높이 값은 어떻게 들어오는지 알아보기
flower menu를 통한 작업을 진행하는 와중에 아이템이 손에 들어올 가능성
    -> 아이템이 손에 있는 상태로 작업을 수행하며, 작업이 완료된 후 아이템을 얻지 못하고 flower menu 작업을 종료한다
## 연구 궁금한 것들
창 크기 변화 감지하여 mapView.center set하기
물체를 옮기는 매크로
물체를 싣고 빼는 매크로
wheel barrow, plow 등 다루는 매크로
    동물한테 같은 공격 반복하기
    맵 데이터 알아내기, 타일별 높이만 알아도 많은 것을 할 수 있다
    mouse button과 mod 버튼은 awt::clicklisner에서 온걸까? 대조해보기
    범위를 지정하는 방식 결정하기
client console로 입력받기
ObjectFinder::find()가 Util::getObjectByInputFromField()와 Util::getObjectByInputFromMethod()를 사용하면서 발생하는 output stream dependency 제거하기
autoconnect 만들다가 thread를 관리하는 방식을 통일하면 좋겠다는 생각이 들었다
## 매크로 기반 기능
배열을 인자로 받는 FlowerMenu.choose()
    아이템 분류기
    아이템 분배기
    gob이 아이템 타입인지 isGobItem()
    인벤토리의 특정 위치에 있는 아이템 집기
    Util.mapViewCenter_를 더 lazy하게 구현하기
    flower menu를 선택하는 등, 살짝의 이동이 필요한 경우 해당 이동을 기다리는 Self.waitArriving()이 필요하다
    손에 있는 아이템 특정 위치에 내려놓기
    이동 거리와 속도를 통해 시간을 예측하고, 그만큼 sleep()한 후 session에서 내 캐릭터에 대한 MSG_OBJDATA메세지가 들어왔을 때 이동이 끝났는지를 flower menu와 유사하게 파악하도록 하자
    해안선 따기 매클로
    간단한 초기 자원을 자동 채집하여 lp를 확보하는 매크로
    나뭇가지 파이어 플레이스에 안넣고 불 옮겨붙이기: 알투 우클
    기본적으로는 컨테이너 아이템빼옴
    맥에서 한글
    맵과 리소스가 어디에 저장되는지
    콩돌 삭제
    스톡파일 컨트롤 쉬프트 ㅡㅅ 밑장 빼기
    요리 벌레, 단순 노동 등
     타워에서 재료 빼와서 만드는 매크로도 좋다
    자료 넣는 매크로
    박물관 아이템 관리 매크로
    싱크로에 블락된 스레드를 인터럽트하면 에러를 뜨로우할까?
    클로버 멕이기
    전투 걸기
    호전 짐승 회피
    가이드 가축   리숴를 우클릭
    등불 2d 빛 레이아웃
    shift right click tar kiln like container
    shoft control right click put all suit item to map object
    눈 캐오는 매크로
    아이템 집기, 스톡파일 만들기 스톡파일 배치하기, 물건 내려놓기
    집 들어가기
    움직임은 상대경로로 할 것
    두 gob 사이의 거리 (각 동물의 사정거리 등을 계산 후, 이 거리만큼 벌려 위치하도록 만드는 매크로)
    동작을 멈춘지 알아내는 함수
    길찾기
        지능적 자율 이동
            이동(절벽, 물, wetland)
    나도 ui 창 띄우면 좋겠다
    범위 드래깅 알아보기
    gob들을 배열로 가져오기
    다양한 상태값 가져오기
    다양한 행동에 대해 어떤 버튼과 modifier 값을 주어야 하는지 알아보기
        나무 심기, 상호작용하기, 나무 밑둥 부수기, 집 들어가기, 물건 들기, 땅파기, 진흙 캐기
    물건 가져오기
    물건 넣기
    음식 먹기
    물 마시기
## 만들 매크로
split
    상추, 물고기, 나무 블럭
예상 퀄 계산기
타르 담기
타르 가마에 나무 넣기
배에서 수레로 짐 옮기기
수레에서 배로 짐 옮기기
wheel barrow controller
로그인 실패하는 경우가 있다. hard하게 widget을 탐색해서 그런걸까?
무두통 채우기
의사소통형 매크로(특정 권한을 가진 캐릭터의 명령을 수행) 
양 클로버 먹이고 털까지 깎는 매클로
마을 건설
물고기 굽기 매크로
자원 탐사 매크로
night vision
해안선 따기 매클로
간단한 초기 자원을 자동 채집하여 lp를 확보하는 매크로
가죽 널고 빼기
자원 채집
    나무, 돌, 끈, 음식, 점토, 물
    큰가지, 나무껍질
    짐승(닭, 다람쥐, 토끼, 거북)
    스터디(잠자리, 무당벌래)
자원 가공
    가죽 -> 말린 가죽 -> 무두 가죽
    나무 -> 통나무 -> 나무 블록, 판자
    나무 밑둥 -> 블록
    나무 블록, 판자, 돌, 큰가지 -> 건물, 벽, 스테이션(무두통, 치즈랙, 드라잉 테이블, 트레일, 허브 테이블, 크레이트)
통나무 차곡차곡 나르기
    가로 세로 계산 후 가로 혹은 세로 방향으로 결정하여
통나무 썰기, 통나무 패기
테닝텁 만들기
치즈렉 만들기
자원 수집하기
평탄화
돌파기
돌깔기
진흙파기
천짜기
밧줄 만들기
평탄화
낚시
유리
모래
클레이팟 만들기 채우기
광물
양잠
나무
돌깔기
박물관 아이템 관리자
마을 건설
눈 캐오기
드림 채집
전투 보조캐
횡 이동
와일드 비컨 매크로
최대 제한 속도에 따라 적절한 달리기 속도로 알아서 변경해주는 매크로
macpie 사냥
한 번씩 자원 채집하는 매크로
소동물 해체
물고기 해체
드라잉 프레임 재료 수집
고기 문(동굴 입구, 집 입구, 등)
벌집, 왁스 파밍
한글 키 입력으로 awt input이 동일하게 작동하도록 수정
음식을 엑셀 데이터로 출력
## 초보 지원 설명서
    새로운 오브젝트 출현시 설명 등
    특정 동작으로 클릭 시 설명 등
    가령 오브젝트를 알트 클릭할 때 시스템 메세지로 그 오브젝트에 대한 랜덤한 술명을 출력하면 재밌겠다

# finish
pathfinder
    blockmap을 매번 new하는 것이 마음에 들지 않는다
    실패 시 해당 타일을 block으로 하고 다시 pathfinding 시행
    object pathfinder
    coord pathfinder
automation
    AlignLog
        설명 보충(주의 사항 등)
            나무를 쌓아둘 영역은 이전 log를 제외하곤 clean 할 것으로 간주합니다
            기존에 쌓아놓은 위치에 그대로 적용 가능
        RN_LOG를 사용하고 있는데, 이거 없에고 import도 빼고 gob에 isLog를 넣자
        지정한 영역 내의 clean만을 간주하고 그 외 영역은 clean하지 않은 것으로 간주한다(이동 제외)
        공간이 부족하면 공간이 어떻게 부족한지, 얼마가 필요한지를 알려주면 좋겠다
        깔끔한 상태, 혹은 이전에 이 프로그램을 사용하여 정리한 공간을 선택한 것으로 간주합니다(북서 타일이 동일해야 함
        해당 위치에 이미 통나무가 있다고 인식하기 위해서는 이 프로그램을 통해 시작 타일이 동일한 작업 공간에 내려 놓아진 통나무만 인식할 수 있습니다
        각 에러 메세지에 따른 해결 방법 및 왜 그런 에러메세지가 뜨는지 man page에 추가하자
영어 버전을 추가하고 한국 버전으로 보내기
    Read this in other languages: English, 한국어, 日本語, 简体中文, 正體中文.
모든 사람을 향한 일반적인 설명 추가
구체적인 실행 방법 기술하기
    다운 후 hafen.jar을 실행
lmi.Api를 만들어도 좋겠다
    모든 api 함수들은 lmi.Api가 shadow한다
mapview에서 mousedown 시에 "place" action을 날릴지에 대한 분기가 존재한다
    이 조건을 is???()라고 이름 지으면 좋겠다
        이 조건을 성립하도록 만드는 이전 처리 과정을 실행하기 위해 어떤 wsgmsg 들을 날렸을까?
            건설: act, bp, name -> place
            내려놓기
                내려 놓는 것도 분명 이런 분기가 존재할 텐데..
서버측에서 처리하는 정보는 기다릴 필요가 없는 것 아닐까?
    가령 물체 들고 빠르게 우클릭해서 내리기
    반대로 클라이언트에서 처리하는 정보: selection, plob
        하지만 이것도 클라이언트에서 완료됨과 무관하게 바로 다음 요청을 보내면 될 것 같다
다시 생각해보니 event-driven 방식을 사용해도 좋을 것 같다
    AlignLog가 event-driven 방식에서는 어떻게 구현될지 state-machine을 그려보자
    timer가 있어야 하기 때문에 event-driven 방식을 사용한다면 로직 흐름이 많이 난해해질 것 같다
    devent-driven을 사용하는 것과 자동화 프로그램을 state-machine으로 구현하는 것은 별개의 문제이다
enummap을 사용하는데도 두 enum 중 하나라도 비트가 set 인 경우를 제대로 detect 하는 코드를 작성하지 못했다
notify에서 _iswaiting을 사용하는데 delegate에서 사용하고 싶을 때, 이걸 public으로 할지, notify() 함수가 boolean 값을 반환할지
여러 정보를 출력하는 커맨드를 dev에 작성
    커서 이름
Automation을 생성할 때 args를 String[]으로 받도록 하면 좋을 것 같다
    Dev에 이를 적용하여 다양한 행동을 가능하게 하자
    class Automation implements Runnable을구현하여 automation program이 Runnable 대신 implements 하도록 하기
타르 가마는 조금 넣으면 빨리꺼지나?
ortho나 cam 등 캐워드 검색 ㅡㅅ 내장 커맨드 라인 사용법
배포 과정을 단순화 시키자
    용량 문제 해결, 다른 녀석들은 어떻게 했나?
    동적 리소스 업데이트...
debug branch 없애기
구글 드라이브 정리하기
배포 과정(일단 개발자 알파 버전 배포)
    liefen title 이름도 바꾸자
    사용법 작성
    클라이언트 특징 작성
        자동화 목록 작성
    앞으로 개발 방향 작성
git의 release 방식을 알아보자
readme에 추가
    convention
        private field는 _를 붙여 naming
        private field는 access시 identifier만 사용
        method는 invoke시 invoking object를 생략하지 않는다 (ex> this.method(), ClassName.method())
    목적
        기능 강화가 목적이 아니라 작업 자동화를 목표로 합니다
loader로 특정 패키지의 class들을 가져올 수 있다면, 일일이 연결할 필요 없도록 명령 실행, 메뉴얼 실행을 자동화 시키면 좋겠다
command 깔끔하게 정리하기
앞으로 automation의 class 이름 앞에는 automation을 붙이자
    모든 command를 automation으로 만들고, class 이름 앞에 automation 빼기
action이 끝난 것은 hand의 변화를 통해 감지해야할 것 같다
    혹은 action이 적용된 경우 hand가 제대로 처리되지 못했으면,, 아니 이것도 나름 이상하다
action을 signal로 생각해보기
Coord::four way(int value)를 만들자
AlignLog
    캐릭터가 오브젝트를 향해 강제로 걸어갈 때 파고들 수 있는 최대 수치가 있다
    그 수치를 감당할 수 있을 정도로 로그 간에 간격을 두자(인간 중심)
    아니 말의 바운딩 박스를 기준으로 하는게 좋겠다
    oldtrunk는 크기가 다르다면 간격에 이를 고려하도록 하자
        만약 크기가 같다면 isLog()에서 포하하도록 하자
        oldtrunk위 높이가 log에 비해 많이 컸다
            log 사이의 간격은 oldtrunk 기준으로 하여 통행이 원활하도록 수정했다
한 번식 클릭이 씹히는 문제(바닐라도 그럴까?)
select area가 딜레이되는 것은 synchronize(uimsgs)가 유력하다
    getrel()을 차근 차근 살펴보자
    결국 uimsgs에 값을 넣어서 rworker thread가 일을 처리하게 하는 것이 아니라, 직접 selector를 생성하도록 했다
drawable이 null인데 class는 Gob인 녀석이 존재하는 것 같다
    아! 아직 그려지지 않은 경우?
    Gob을 파악할 때 그려진 것만 이름을 알 수 있으므로 그려진 것만 처리하도록 하자
    하지만 drawable이 null인 Gob의 정체를 알고 싶다..
        아마 oldtrunk로 변하면서 resource가 완벽히 저장되지 않은 gob인 것이 아닐까?
alert는 알림음, error는 에러 음
    전부 딸깍 하는 에러 음이 좋을수도?
    알림음 너무 시끄럽다
게임 안에서 명령 입력받는 기능 추가하기
    이 경우 예외가 팝업창으로 뜨는지 확인하도록 하자
지금 automation thread가 돌아갈 때 exit하면 종료하나?
    계속 남나?
일단 haven의 command line으로 실행하는 것은 성공했는데 실행하면 main thread가 그 동안 멈춰버리는 문제가 있다
    이를 해결하자
    MainCommand를 적절한 타이밍에 추가하기
    부캐를 드낙거리면서 kin messag가 어떻게 system message에 흰 색으로 출력하는지 알아보기
        user message를 이 방식으로 출력할 것이다
특정 키를 눌렀을 때 interrupt하도록 해야한다
setCommand를 초기에 설정하도록 하고, 명령이 입력된 경우 MainRunnable로 command를 실행하도록 하자
get area에서 map click이 modifier에 상관 없이 작동하는 문제
get area 중 중단 시 click이 먹통이 되는 문제
forcemove를 하는 것이 아니라 move에 실패하면 다음 targetPutCoord를 찾는게 맞을 것 같다
    나의 자동화 시스템은 제한된 환경 하에서 진행되기 때문에 force move를 하는 것이 맞다
    멈췄다는 것은 외부의 개입으로 인해 멈춘 것으로 간주하고 하던 작업을 강제하는 것이 맞다
CleanLog -> AlignLog
짝수 row는 위에서 아래로 put해야 한다!
    cleanLog를 실수로 소문자로 파일 이름을 적었다. 이거 대문자로 바꿔야 하는데 쉽지 않을 것이다. 이미 한 번 실패함
loop()에서 처음에 가장 가까운 나무를 바로 lift하는데, first point로 가서 lift해야 한다
실패 시 다시 move를 반복 수행하는 move를 만들면 좋겠다
assign -> transform or mutating(언어의 한계를 받아들이자)
Util부터 diff 계속 보기
나무 정리하는 매크로
    범위를 지정하여 로그 정리하기
    다양한 각도로 내려놓는 방법
exception을 사용하여 status code 관리하기
지금 AutomationThread에서 lambda를 사용중인데 이거 함수로 뺄 수도 있을까?
    그리고 여기서 try catch를 사용하여 범용 exception을 처리해야 할 것 같다
최적화, 만약 자리가 차지되 있으면 불필요한 이동 없이 다음 자리로
SC_* -> ET_*
Returns -> Throws
SC_SUCCEEDED -> x
y위치 제대로 계산한거 맞는지 검산하기
pbot api에서 바운딩 박스를 알아내는 방법
Self.hardHitPoint()가 haven.LMI.gaugeWidgetGaugeArray()를 호출할 때 인자로 null을 전달하는 문제
Gob.waitLift()
Point는 이름도 마음에 안들고 아예 field를 바꿔서 새로운 class를 만드는 것이 의미가 있었지만,
    Gob은 기존의 haven.Gob에 method를 추가하는 것이 더 좋지 않을까?
meter array에서 resource name으로 widget을 get하는 함수를 widget manager에 추가하기
끌 때마다 계속 뭔가 예외가 나는데 무슨 문제일까?
carry()
나무의 바운딩 박스 크기를 알아내는 함수(들고 내려놓고 반복)
lift는 잘 됐다 put을 만들면 되겠다
lift
    trigger: following::$follow
    verify: pose - banzai
이거 progress beginning이랑 ending이 delegate에서 빠진 것 같은데?
wait() -> wait(Object subject)
    이로 인해 변하는 함수들도 recursive하게 수정해준다
관찰 대상
    자신 캐릭터, 상호작용한 아이템, 
log가 머리 위로 올라오는 것은 어떤 함수가 호출되서 그렇게 되는거지?
    delta는 아닌 것 같다
        d.type 16도 아니었고 18도 아니었다
    그럼 uimsg()를 호출하는 getrel일까?
    아니면 map data를 control하는 mapdata()일까?
    머리 위로 올라왔을 때 그 물체의 좌표는 나의 좌표와 같겠지?
command -> action
widget message handler에서 public api를 elaborate하기
대상을 우클릭하여 flower menu가 뜨기 까지, 그리고 이동, 채집, 만약 끝났으면 채집을 다시 확인, 그런데 1. 플라워 메뉴가 안열린다, 2. 열린 플라워 메뉴에 하던 작업이 사라졌다. -> 채집이 끝남
survey를 지정할 때 드래그가 어떻게 작동하는지 파악해보자
    만약 사용할 수 있다면 이를 통해 영역 내의 gob을 가져올 수 있으면 좋겠지만..
변화를 혼자 감지하는 것이 아니라 서버로부터 받은 응답으로부터 감지하면 될 거 같다
FlowerMenu의 constructor에서 petal까지 다 생성된 FlowerMenu를 특정 변수에 넣어준다(synch). 그러면 해당 FlowewrMenu가 다 만들어졌는지 알 수 있고, wdgmsg()를 소화할 수 있도록 설정이 완료된 상황이라면 명령을 수행하는 것이 가능하다. 만약 일정 시간동안 FlowerMenu widget이 생성되지 않는다면 서버와의 통신이 불안정한 것으로 인지하고 매크로를 중지하도록 하자
flowermenu 상호작용 완성하기
    uimsg로부터 flowermenu가 생성됐는지 확인하고 signal 보내기 
FlowerMenuHandler::waitOpen()
움직임이 멈췄는지도 uimsg를 통해 알 수 있을 것 같다.
스톡파일의 상태를 확인하는 방법
wait을 하는 상황이 다양한데, 다양한 wait을 각각 다 구현해주는 것이 맞을까? 아니면 공통된 wait을 만들어서 사용하는 것이 좋을까
이동 애니메이션이 끝나면 도착한 것으로 생각할 수 있다.
flowermenu strict
pose를 가져오는 함수를 GobHandler로 빼기
일단은 상호작용 시 1초간 응답이 없으면 실패하는 것으로 했는데, ack라도 날라오지 않으려나? 찍어보자
    다른 wait() 사용 함수들도 timer를 등록하여 응답이 없으면 실패한 것으로 간주하도록 수정하자
다시 좀 찍어보자 이동하는 d.type을
FlowerMenu의 open()과 close()는 잘 수정 했다. choose()를 수정하자
FlowerMenu도 WaitManager를 적용하기 (delegate가 아니라)
일단 기본적인 동작은 잘 하는 것 같다. 제대로 동작하는지 검산하고 플로우차트 그리기
    일단 didAdded는 달 됐다
    아직 flower menu가 ProgressManager를 사용하지 않는다. 이걸 사용하도록 수정하자
어제 만든 플라워 메뉴 정리하기
MoveManager 만들기
반환값 정리하고 문서화하기
만약 장애물에 걸려 경로가 변경되면 어떤 메세지들이 날아올까?
    1, 4가 오다가 1, 3, 4가 온다
move가 엄밀하지 못하다
    가령 waitMove()에서 is arrived가 false라 wait move beginning()을 호출하려 하는데 그 사이에 도착해버리면 fail한다
MoveManager도 있어야 겠다. FlowerMenu를 선택했을 때 움직임은 linMove인가?
    그렇다
stockpile widget이랑 flower menu widget 모두 haven.Widget을 extends하는 것 같다. 그리고 여러개가 존재할 수 있겠네..?
    하지만 flower menu widget은 하나만 존재
    Debug.describeClassNameAndHash()로 addwidget 시 추가되는 widget의 class name을 출력해보자
후.. WaitManager 완성했다.. 기본적인 WidgetMessageHandler의 method 들도 WaitManager를 사용하도록 수정했다
    Self의 move()나 FlowerMenu의 open() close() 등도 WaitManager를 사용하도록 수정하자
        그리고 모든 경우 WaitManager를 사용할 수는 없다. 결국 움직여서 도착하는 것을 알기 위해서는 거리를 확인해야만 한다
후.. 어차피 각 send마다 complete signal을 다른 방식으로 받아오는데, 이거 WaitManager::waitMessage를 사용할 이유가 있나?
    flower menu에 close와 choose가 어떤 상황일 때 wait을 해야 할지 생각중이었다
        차라리 WaitManager::waitMessage를 안쓰면 더 좋을듯???
            WaitManager::waitMessage를 사용해서 이득을 보는 경우가 뭐가 있지?
                flowerMenu를 열려고 시도했는데 열리지 않았을 때
custom을 enum으로 수정하기
move-did-starting, move-did-ending을 checkCommand하도록 추가하기
import static 연구해보기
waitOpen()이 잘 되도록 delegate 손보기
constant의 이름을 애초에 구분지어 설정한 후 static import를 하여 사용하기
    응, 괜찮을 것 같다
이번에 WaitManager를 수정하면서 moving을 수정할 예정인데 d.type 1이 어떤 attribute class였는지 출력해보자
들고 있는 오브젝트 내려놓기
flower menu did open delegate 만들기
gob을 다 소모했을 경우 출력
OCache::GobInfo::apply()를 통해 delta를 적용한 후 만약 의도한 위치에 도착했다면 attribute의 동작을 수정할 것 같은데, 애니메이션이 변하는 것일까? 이동 모션에 대한 데이터는 어디에 있으며, apply() 후 어떻 식으로 그 데이터를 수정하는지 알아보자 -> 도착함을 인지할 수 있다
pbot 조사
    get_poses
    is_knocked
    stockpile_is_full
Skeleton::PoseMode의 age()가 호출되는데, 이게 abstract이다
그러니 Skeleton::PoseMode를 상속받는 녀석들의 age()가 어떤 일을 하는지 알아보자
moveCenter()
move4way()
GItem이라는 메세지가 많이 전달받는데 뭐하는 녀석일까?
인벤토리의 아이템을 집는 방법
아이템을 클릭하면 gob을 어떻게 가져오는 걸까? 
gob sensor
debug에 boolean을 둬서 debug메세지를 출력할지 말지를 설정할 수 있게 하기
RWorker가 받은 메세지를 출력하고 싶지만 굉장히 불편하게 출력된다. 간결하게 출력하도록 해보자
    이 메세지를 통해 어떤 응답을 받았는지에 따라 적절한 시그널을 체크하는 시스템을 만들어보자
    그러면 명령한 작업이 응답을 받았는지 직접 알 수 있다
tileCenter를 test하기
local repository를 가리키는 branch의  이름을 local이라고 하면 되지 않을까?
    어떤 branch이던 항상 remote repository에 push해 둘 것이기 때문에 local이 따로 필요할지 잘 모르겠다
main branch에 통합좀 시키자
README.md 도 만들어서 접근성을 높일 필요도 있다
lmi도 Initializer 만들기
MapView:1977 정도에 주석 달아놓은거 구현하기
flower menu interaction 구현
    lmi.OjbectShadow.rootWidget_.lchild as haven.FlowerMenu
debug도 dev에 rebase하고 backup branch 삭제하기
flower menu를 띄우는 방식이 조금 복잡하다
    ClickData 더 알아보고 slot은 무엇인지, clickdata가 어디서 읽어서 설정되는지 파악하자
    mesh에 대한 이해도 필요할 것 같다(mesh 데이터가 어떤 구조로 저장되는지
    callback에 대한 이해, 그에 따른 stack 구현이 어떻게 되는지(아마 내가 아는 것과 다르지 않을 것이다)
    이를 토대로 올바르게 flower menu를 띄우는 방법을 알아보자
overlay는 아직 언제 필요한지 모르겠다, 항상 없는것으로 우선 구현해두자
일반적으로 meshid는 -1로 두고 필요하면 조사하여 적용하도록 하자
없는 petal을 선택하면 어덯게 될까?
    에러를 발생시키도록 만들었다
gob.rc와 gob.c의 차이??
드래그로 범위를 긁어오는 법 구현하기
meters가 public이 아니라 직접 접근이 불가능하다
    이런 경우를 위해 rootWidget_으로부터 resource name이 특정한 widget을 가져오는 함수를 만들어서 사용하도록 하자
        일단 컴파일이 되고 실행이 되도록 수정한 후 push를 하도록 한다
동서남북 움직이기
objectChange가 마지막 하나까지 undo가 가능한 문제
getc로 Coord3f를 가져올 수 있다고 하는데, 높이가 나오는걸까?
    play를 object로 설정하고 위치를 옮겨가며 getc()를 호출해보자
    getv()도 호출해보자
따로 Thread.isInterrupted()를 체크하지 않아도 try catch문 안에 있다면 thread가 종료될까?
동서남북 좌표체계 awt의 좌표 체계와 동일 
log은 복잡하지만 character select는 구현해보자
java에는 self가 없고 this가 있기 때문에 Plyaer를 Self라고 하면 어떨까?
아주 근거리를 클릭할 경우 캐릭터는 움직이지 안는다. 만약 바라보는 방향이 달라질 수 있다면 바라보는 방향을 바꾼다. 만약 1 정수거리만큼을 수정하여 캐릭터의 방향을 바꾸었을 때 실제 위치도 바뀔까?
    그리고 움직이지 않는다고 하더라도 혹시 미세하게 실제 위치는 바뀐게 아닐까?
캐릭터를 클릭하여 gob을 저장하고 매크로를 실행하여 이동한 후, 캐릭터의 좌표가 의도한 위치에 있는지 출력해보기
    위로 1 타일 움직였다가 원래 위치의 바로 1 오른쪽의 서버 좌표로 이동해보고, 실제 1 서버 좌표만큼 큰 좌표로 이동했는지 확인해보자
util의 convert 함수를 사용하여 coord를 변환하도록 수정
gob을 클릭하면 그 gob을 얻어오는 로직을 짰으니 타일 중앙에 두 gob을 두고 각 각의 좌표를 출력하여 실제 한 타일의 크기를 알아내보자
click한 object를 가져와서 그 좌표를 출력하도록 하자
default client를 토대로 mapClick을 재구현하기
겹친 gob을 클릭하면 무엇이 클릭될까?
    가장 위의 하나만 클릭된다.
일단은 하나의 매크로만 실행 가능하도록 구현하기
    필요하다면 하나의 매크로 안에서 다양한 기능을 하도록 만들 수 있을 것이다.
    thread 분리해서 여러 매크로 돌릴 수 있도록 하기
        이 때 원하는 매크로는 언제나 끌 수 있어야 한다.
wgdmsg()가 남발되지 않도록 guard하는 함수를 만들면 좋겠다.
    최소한의 간격을 두고 메세지를 보내도록
        이 간격 간수 등은 상수 파일로 따로 분리하자
constant를 만들었는데 getter 없이 print했을 때 무엇이 출력되는지 확인하기
프로그램 종료를 어떻게 할지
    interrupt를 받았을 경우 interrupt인지를 판단하고 프로그램을 종료하는 로직
장소 이동 시 mapView_.player()의 반환 값이 다른 object로 변하는지 확인하기
    변한다(항상은 아니겠지만)
허스 데이터를 허스 텍스트 파일로 옮기기
메모 기록 옮겨적기
아이디 관리하기
Util.saveGob()을 public에서 private으로 바꿨다, haven package에서 이를 반영하도록 수정하자.
object finder를 만들어서 이전 object로 다시 이동할 수 있도록 하자.

# 지형별 특징

바다 -> 고래, 조개
산 -> 눈, 뱀, 매머드
숲 -> 곰, 무스
초원 -> 말, 양, 닭
늪 -> 거북, 왁스

# food

https://certainly-not-a-cat.github.io/cookbook/
-black%20truffles -fairy%20mushroom -bloated%20bolete -troll%20mushrooms

default

5 boiled round clam: agi, dex
4.33 marrow roast: cha, con, wil
4 clambake: cha, per
dried filet of .*
river pearl mussel, vinger -> moules frites dex+2

farming
3.5 pumpkin stew: wil, con
4.5 molehill: cha, per
5.5 chewy chevon: agi, con, wil
6.5 perched perch: agi, int, dex
4 roast roach wrap: con, int, dex
4.67 baked birchbark bream: int, cha, dex
lettuce leaf: pan-seared fish, 
leek

frying pan
늑대, 라우렐 -> 커틀릿 str+2

bee keeping
7 fruit sorbet: int, cha
6.8 honey'd bear: wil, str, con

poultry

tame
5 onion skewer: wil, str, con
2.66 jotun's morsel: str, con, wil, int
3.33 tuber mash: cha, int, per
6.4 beeted bird breast: con, cha, psy
9 strawberry cake: wil, per
4.66 haggis: cha, con

meat grinder
3 kebab meat: con, cha
3.33 autumn steak: per, con
4.66 swan neck: per, cha
3.66 mushroom mash: wil, per, int
2 steak & tubers: con, str, cha
10.5 wonderful wilderness wurst: wil, psy

vinegar
6.5 moules frites: dex, cha, psy
6 deep fried bird: con, cha
8 stinging salad: per, wil, str
5.2 zesty brill: wil, str, dex

strong
4.33 cave skewer: psy, con

# video
how to hunt mallock

# log
3.29:1 = hnh:rl
서버로부터 적절한 오브젝트 메세지를 받지 못해 캐릭터의 위치를 특정할 수 없는 경우 이동 모션은 있지만 속도는 존재한다
Coord 타입으로 타일 중앙은 512
Coord 타입으로 타일 한 칸은 1024
Coord2d 타입으로 타일 중앙은 5.5
Coord2d 타입으로 타일 한 칸은 11.0

objs를 iterate하는 도중에 변하면 next()를 실패할 수 있는 모양이다
direction은 polar coordinate [0, 2pie]

sleep 등이 interrupted 될 때 throw를 해봤자 그 외에 interrupted된 경우에 currentThread()의 interrupted 여부를 직접 확인해야 한다

claim 밖에 설치된 wrecking ball은 경고 알람을 주지 않는다
    반드시 목책 밖으로 최소 1타일은 사유지이도록 설계하자

#plan
UCK(Unite Community of Korea)

-name:garrotxa;-name:"creamy cock";-from:cachalot;-name:picodon;-from:pork;-from:driftkelp;-from:"grey seal";con>;-from:sheepsmilk;-from:"fairy mushroom";-from:"chicken egg";-from:cowsmilk;-name:troll;-from:"juniper berries";-name:caviar;-name:roeboat;-from:pepper;-name:"fishballs";-from:"magpie egg"
from:turnip;-from:quail;-from:eagle;-from:"meat stuffing";-from:juniper;-from:"sage";-from:"fairy mushroom";-from:"cowsmilk";-from:"magpie egg";-from:"chicken egg";-from:"thyme"
name:omelette;-from:cachalot;-from:juniper berries;-from:pork bollock;-from:black pepper;-from:mammoth;-from:orca;-from:fairy mushroom;-from:cave lantern;-from:adder;-from:quail;-from:bay bolete;-from:leek
-from:driftkelp;-name:troll;-from:fairy mushroom;-from:milk;dex>;-name:moules;-from:pepper;-from:cachalot;-name:caviar;-name:roeboat;name:clambake;-from:juniper;from:pike;from:round
-from:driftkelp;-name:troll;-from:fairy mushroom;-name:caviar;-name:roeboat;-from:bollock;-from:chicken;-name:clambake;-name:lemon;-name:fishwrap;-name:shepherd's;-name:autumn;-name:Wellplaiced;name:fruit pie
